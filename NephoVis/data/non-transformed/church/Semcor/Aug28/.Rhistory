geom_bar(aes(cluster, fill=sense))
ggplot(tokens_info) +
geom_bar(aes(cluster, fill=supersense))
ggplot(tokens_info) +
geom_bar(imaginfo, fill = supersense)
ggplot(tokens_info) +
geom_bar(aes(imaginfo, fill=supersense))
ggplot(tokens_info) +
geom_bar(aes(cluster, fill=supersense))
groupcluster3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(cluster, fill = pressficnon)) +
labs(caption = paste0("Model information: ", s_description))
p3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(cluster, fill = category_name)) +
labs(caption = paste0("Model information: ", s_description))
p3
groupcluster3 %>% select(semcor_names, cluster)
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = 1))
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = factor(cluster)) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = "1"))
p3 <- ggplot(groupcluster3) +
geom_bar(aes(cluster, fill = pressficnon)) +
labs(caption = paste0("Model information: ", s_description))
p3
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = factor(cluster)) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = "1", mostly_nonfiction = "2", mostly_press = "3"))
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = factor(cluster)) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = "1", mostly_nonfiction = "2", mostly_press = "3")) %>% count(cluster)
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = factor(cluster)) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = "1", mostly_nonfiction = "2", mostly_press = "3")) %>% write_csv("C:/Users/u0118974/Box Sync/church and rest/Brown_raw/three_semcor_clusters.csv")
github <- "C:/Users/u0118974/xampp/htdocs/GitHub/delhikiev.github.io/"
fname <- paste0(github, "church.tsv")
clouds <- read_tsv(fname)
nrow(clouds)
clouds %>% distinct() %>% nrow()
colnames(stress)
colnames(clouds)
tail(colnames(clouds))
length(colnames(clouds)[!endsWith(colnames(clouds), ".x")])
length(colnames(clouds))
length(colnames(clouds)[!endsWith(colnames(clouds), ".x")|!endsWith(colnames(clouds), ".y")])
length(colnames(clouds)[!endsWith(colnames(clouds), ".x")&!endsWith(colnames(clouds), ".y")])
colnames(clouds)[!endsWith(colnames(clouds), ".x")&!endsWith(colnames(clouds), ".y")]
fname <- paste0(github, "church.models.tsv")
models <- read_tsv(fname)
nrow(models)
models %>% distinct() %>% nnrow()
models %>% distinct() %>% nrow()
models %>% select(-stress) %>% distinct() %>% nrow()
n_distinct(models$model)
models %>% mutate(idx = seq.int(1, nrow(models)))
models %>% mutate(idx = seq.int(1, nrow(models)))
models %>% filter(register == 'all') %>% count(tokens)
models %>% count(register)
models %>% count(compounds)
models <- read_tsv(fname)
models %>% count(register)
nrow(models)
shiny::runApp('C:/Users/u0118974/Box Sync/church and rest/DepsNCues/cw_clouds/TypeClouds')
groupcluster3
groupcluster3 %>% count(register, cluster) %>% spread(key = register, value = n, fill = 0)
groupcluster3 %>% count(pressficnon, cluster) %>% spread(key = pressficnon, value = n, fill = 0)
groupcluster3 %>% count(imaginfo, cluster) %>% spread(key = imaginfo, value = n, fill = 0)
groupcluster3 %>% count(register, cluster) %>% spread(key = cluster, value = n, fill = 0)
groupcluster3 %>% count(category_name, cluster) %>% spread(key = cluster, value = n, fill = 0)
runApp('C:/Users/u0118974/Box Sync/church and rest/DepsNCues/cw_clouds/TypeClouds')
tokens_info
tokens_info %>% filter(cluster == '1')
tokens_info %>% filter(cluster == '1' & compound_status=='simply_church') %>% count(supersense, category_name) %>% spread(key = supersense, value = n, fill = 0)
tokens_info %>% filter(cluster == '2' & compound_status=='simply_church') %>% count(supersense, category_name) %>% spread(key = supersense, value = n, fill = 0)
tokens_info %>% filter(cluster == '3' & compound_status=='simply_church') %>% count(supersense, category_name) %>% spread(key = supersense, value = n, fill = 0)
shiny::runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
install.packages("misc3d")
clouds
shiny::runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
subcloud
clouds <- read_tsv("church.clouds.tsv")
library(shiny)
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
clouds
#clouds <- read_tsv("church.tsv")
# models <- read_tsv("church.models.tsv")
#clouds <- read_tsv("old.favorite.cloud.tsv")
clouds <- read_tsv("favorite.cloud.tsv")
shiny::runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
dist <- "nocomp.10_10_nvj_nobound.noweight.1.s.5k_all.5_5.ttmx.dist.pac"
temp <- unzip(dist, unzip="internal")
tokvecs <- npyLoad(temp[2])
metadata <- fromJSON(file = temp[1])
dimid2item <- metadata$'row_items'
dimnames(tokvecs) <- list(dimid2item, dimid2item)
file.remove(temp[1], temp[2])
hc <- hclust(dist(tokvecs), method = "average")
ddata <- dendro_data(as.dendrogram(hc))
library(shiny); library(shinythemes)
library(readr); library(dplyr); library(purrr); library(forcats)
library(ggplot2); library(plotly); library(misc3d)
library(RcppCNPy); library(rjson)
library(ggdendro)
#clouds <- read_tsv("church.tsv")
# models <- read_tsv("church.models.tsv")
#clouds <- read_tsv("old.favorite.cloud.tsv")
clouds <- read_tsv("new.favorite.cloud.tsv")
legendmap <- read_tsv("legendmap.tsv")
dist <- "nocomp.10_10_nvj_nobound.noweight.1.s.5k_all.5_5.ttmx.dist.pac"
temp <- unzip(dist, unzip="internal")
tokvecs <- npyLoad(temp[2])
metadata <- fromJSON(file = temp[1])
dimid2item <- metadata$'row_items'
dimnames(tokvecs) <- list(dimid2item, dimid2item)
file.remove(temp[1], temp[2])
R.version
install.packages('zipfR')
library(tidyverse)
## Working directory should be the dir with isoMDS solutions
setwd("Aug01/")
models <- read_tsv("church.models.tsv")
setwd('../xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/')
library(tidyverse)
# -------------------
church <- read_tsv('church/church.tsv')
church %>% select(-starts_with('_cws'), -ends_with('.x'), -ends_with('.y')) %>% colnames
church %>% select(`_id`, starts_with('_count')) %>% colnames
church %>% select(`_id`, ends_with('_count')) %>% colnames
church %>% select(`_id`, ends_with('_count'))
church %>% select(`_id`, ends_with('_count')) %>% summarise(min)
church %>% select(`_id`, ends_with('_count')) %>% summarise(min = min())
counts <- church %>% select(`_id`, ends_with('_count'))
length(colnames(counts))
counts %>% rowwise() %>% mutate(min = min(~get(colnames(counts)[1]), ~get(colnames(counts)[25])))
counts %>% rowwise() %>% summarise(min)
counts %>% rowwise() %>% summarise(meann)
counts %>% rowwise() %>% summarise(mean)
counts %>% select(-`_id`) %>% rowwise() %>% summarise(mean)
counts %>% select(-`_id`) %>% rowwise() %>% mutate(m = mean(church_nocomp.5_5.nvjid.noweight.nobound.s_count, church_nocomp.5_5.nvjid.ppmi.nobound.s_count))
counts %>% rowwise() %>%
mutate(m = mean(church_nocomp.5_5.nvjid.noweight.nobound.s_count, church_nocomp.5_5.nvjid.ppmi.nobound.s_count)) %>%
select(m)
counts %>% rowwise() %>%
mutate(m = mean(church_nocomp.5_5.nvjid.noweight.nobound.s_count, church_nocomp.5_5.nvjid.ppmi.nobound.s_count)) %>%
select(`_id`, m)
counts %>% rowwise() %>%
mutate(m = mean(church_nocomp.5_5.nvjid.noweight.nobound.s_count : church_nocomp.5_5.nvjid.ppmi.nobound.s_count)) %>%
select(`_id`, m)
counts %>% rowwise() %>%
mutate(m = min(church_nocomp.5_5.nvjid.noweight.nobound.s_count : church_nocomp.5_5.nvjid.ppmi.nobound.s_count)) %>%
select(`_id`, m)
colnames(counts)[2]
counts %>% rowwise() %>%
mutate(m = min(church_nocomp.10_10.none.noweight.nobound.c_count : church_nocomp.5_5.nvjid.ppmi.nobound.s_count)) %>%
select(`_id`, m)
countsmin <- counts %>% rowwise() %>%
mutate(m = min(church_nocomp.10_10.none.noweight.nobound.c_count : church_nocomp.5_5.nvjid.ppmi.nobound.s_count)) %>%
select(`_id`, m)
countsmin %>% filter(m == min(countsmin$m))
singles <- countsmin %>% filter(m == min(countsmin$m)) %>% pull(`_id`)
counts %>% filter(`_id` %in% singles)
counts %>% filter(`_id` %in% singles) %>% t
counts %>% filter(`_id` %in% singles) %>% t %>%
tibble
singles <- counts %>% filter(`_id` %in% singles) %>% t
tibble(model = rownames(singles)[2:25],
token1 = singles[2:25, 1],
token2 = singles[2:25, 2])
tibble(model = rownames(singles)[2:25],
token1 = singles[2:25, 1],
token2 = singles[2:25, 2]) %>%
setNames('model', singles[1,1], singles[1,2])
tibble(model = rownames(singles)[2:25],
token1 = singles[2:25, 1],
token2 = singles[2:25, 2]) %>%
setNames(c('model', singles[1,1], singles[1,2]))
singles <- tibble(model = rownames(singles)[2:25],
token1 = singles[2:25, 1],
token2 = singles[2:25, 2]) %>%
setNames(c('model', singles[1,1], singles[1,2]))
singles %>% filter(`church/N/br-l08/1824` == '1')
singles %>% filter(`church/N/br-l08/1824` == '1' | `church/N/br-k04/2307` == '1')
church %>% filter(`_id` %in% c('church/N/br-l08/1824', 'church/N/br-k04/2307'))
singles %>% filter(`church/N/br-l08/1824` == '1' | `church/N/br-k04/2307` == '1')
rsplit('church_nocomp.5_5.none.ppmi.nobound.c_count', 1)
split('church_nocomp.5_5.none.ppmi.nobound.c_count', 1)
split('church_nocomp.5_5.none.ppmi.nobound.c_count', sep = '_')
split('church_nocomp.5_5.none.ppmi.nobound.c_count', f = '_')
?str_split
str_split('church_nocomp.5_5.none.ppmi.nobound.c_count', pattern = '_')
str_split('church_nocomp.5_5.none.ppmi.nobound.c_count', pattern = '_', n=1)
str_split('church_nocomp.5_5.none.ppmi.nobound.c_count', pattern = '_', n=2)
'hola'[1:3]
?str_subset
str_replace('church_nocomp.5_5.none.ppmi.nobound.c_count', '(.*)_count', '\\1')
church_nocomp.5_5.nvjid.noweight.nobound.s_count
church %>% filter(`_id` %in% c('church/N/br-l08/1824', 'church/N/br-k04/2307')) %>%
select(starts_with('church_nocomp.5_5.none.ppmi.nobound.c'),
starts_with('church_nocomp.5_5.nvj.noweight.nobound.c'),
starts_with('church_nocomp.5_5.nvj.ppmi.nobound.c'),
starts_with('church_nocomp.5_5.nvjid.ppmi.nobound.c'),
starts_with('church_nocomp.5_5.nvj.noweight.nobound.s'),
starts_with('church_nocomp.5_5.nvj.ppmi.nobound.s'),
starts_with('church_nocomp.5_5.nvjid.ppmi.nobound.s'))
church %>% filter(`_id` %in% c('church/N/br-l08/1824', 'church/N/br-k04/2307')) %>%
select(starts_with(str_replace(singles$model[1], '(.*)_count', '\\1')))
singles
wrong <- singles %>% filter(`church/N/br-l08/1824` == '1' | `church/N/br-k04/2307` == '1')
wrong
church %>% filter(`_id` %in% c('church/N/br-l08/1824', 'church/N/br-k04/2307')) %>%
select(starts_with(str_replace(wrong$model[1], '(.*)_count', '\\1')))
church %>% filter(`_id` %in% c('church/N/br-l08/1824')) %>%
select(starts_with(str_replace(wrong$model[1], '(.*)_count', '\\1'))) %>% t
wrong
church %>% filter(`_id` %in% c('church/N/br-k04/2307')) %>%
select(starts_with(str_replace(wrong$model[2], '(.*)_count', '\\1'))) %>% t
church %>% filter(`_id` %in% c('church/N/br-l08/1824')) %>%
select(starts_with(str_replace(wrong$model[3], '(.*)_count', '\\1'))) %>% t
church %>% filter(`_id` %in% c('church/N/br-l08/1824')) %>%
select(starts_with(str_replace(wrong$model[4], '(.*)_count', '\\1'))) %>% t
church %>% filter(`_id` %in% c('church/N/br-k04/2307')) %>%
select(starts_with(str_replace(wrong$model[4], '(.*)_count', '\\1'))) %>% t
church %>% filter(`_id` %in% c('church/N/br-k04/2307')) %>%
select(starts_with(str_replace(wrong$model[5], '(.*)_count', '\\1'))) %>% t
church %>% filter(`_id` %in% c('church/N/br-l08/1824')) %>%
select(starts_with(str_replace(wrong$model[6], '(.*)_count', '\\1'))) %>% t
church %>% filter(`_id` %in% c('church/N/br-k04/2307')) %>%
select(starts_with(str_replace(wrong$model[6], '(.*)_count', '\\1'))) %>% t
church %>% filter(`_id` %in% c('church/N/br-k04/2307')) %>%
select(starts_with(str_replace(wrong$model[7], '(.*)_count', '\\1'))) %>% t
church %>% filter(`_id` %in% c('church/N/br-l08/1824')) %>%
select(starts_with(str_replace(wrong$model[7], '(.*)_count', '\\1'))) %>% t
counts %>% filter(`_id` == 'church/N/br-f44/1122') %>% select(church_nocomp.10_10.nvj.ppmi.nobound.c_count)
colnames(counts[1])
colnames(counts[2])
colnames(counts[25])
countsmin <- counts %>% rowwise() %>%
mutate(m = min(church_nocomp.10_10.none.noweight.nobound.c_count : church_nocomp.5_5.nvjid.ppmi.nobound.s_count)) %>%
select(`_id`, m)
countsmin %>% filter(m == 1)
countsmin %>% filter(`_id` == 'church/N/br-f44/1122')
countsmin <- counts %>% rowwise() %>%
mutate(m = min()) %>%
select(`_id`, m)
countsmin <- counts %>% rowwise() %>%
mutate(m = min())
countsmin <- counts %>% rowwise() %>%
mutate(m = min(2:25)) %>%
select(`_id`, m)
countsmin
countsmin %>% filter(m == 1)
counts %>% t
counts %>% summarise(n = min())
counts %>% summarise_each(funs(min))
counts %>% summarise_each(list(~min))
counts %>% summarise_each(list(~min), !starts_with('_'))
counts %>% summarise_each(list(~min), 2:25)
min(counts$church_nocomp.10_10.none.noweight.nobound.c_count)
counts %>% summarise_each(list(~min), church_nocomp.10_10.none.noweight.nobound.c_count)
counts %>% summarise_each(funs(min), church_nocomp.10_10.none.noweight.nobound.c_count)
counts %>% summarise_each(funs(min))
counts %>% summarise_each(funs(min)) %>% gather(2:25, key = 'model', value = 'min')
counts %>% summarise_each(funs(min)) %>% gather(2:25, key = 'model', value = 'min') %>% filter(min == 1)
singles <- counts %>% summarise_each(funs(min)) %>% gather(2:25, key = 'model', value = 'min') %>% filter(min == 1)
church %>% filter(~get(singles$model[1]) == 1)
church %>% filter(singles$model[1] == 1)
church %>% filter(get(singles$model[1]) == 1)
church %>% filter(get(singles$model[1]) == 1) %>% pull(`_id`)
x <- church %>% filter(get(singles$model[1]) == 1) %>% pull(`_id`)
church %>% filter(`_id` %in% x) %>% select(starts_with(str_replace(singles$model[1], '(.*)_count', '\\1')))
church %>% filter(`_id` %in% x) %>% select(starts_with(str_replace(singles$model[1], '(.*)_count', '\\1'))) %>% t
x <- church %>% filter(get(singles$model[2]) == 1) %>% pull(`_id`)
church %>% filter(`_id` %in% x) %>% select(starts_with(str_replace(singles$model[2], '(.*)_count', '\\1'))) %>% t
test = 2
x <- church %>% filter(get(singles$model[test]) == 1) %>% pull(`_id`)
y <- church %>% filter(`_id` %in% x) %>% select(starts_with(str_replace(singles$model[test], '(.*)_count', '\\1')))
y[y>0]
y
church %>% filter(`_id` %in% x) %>% select(starts_with(str_replace(singles$model[test], '(.*)_count', '\\1'))) %>% t
y <- church %>% filter(`_id` %in% x) %>% select(starts_with(str_replace(singles$model[test], '(.*)_count', '\\1')))
t(y)
y$`_id`[1]
y <- church %>% filter(`_id` %in% x) %>% select(`_id`, starts_with(str_replace(singles$model[test], '(.*)_count', '\\1')))
t(y)
test = 3
x <- church %>% filter(get(singles$model[test]) == 1) %>% pull(`_id`)
y <- church %>% filter(`_id` %in% x) %>% select(`_id`, starts_with(str_replace(singles$model[test], '(.*)_count', '\\1')))
t(y)
test = 4
x <- church %>% filter(get(singles$model[test]) == 1) %>% pull(`_id`)
church %>% filter(`_id` %in% x) %>% select(`_id`, starts_with(str_replace(singles$model[test], '(.*)_count', '\\1'))) %>% t
singles
test = 4
x <- church %>% filter(get(singles$model[test]) == 1) %>% pull(`_id`)
church %>% filter(`_id` %in% x) %>% select(`_id`, starts_with(str_replace(singles$model[test], '(.*)_count', '\\1'))) %>% t
test = 5
x <- church %>% filter(get(singles$model[test]) == 1) %>% pull(`_id`)
church %>% filter(`_id` %in% x) %>% select(`_id`, starts_with(str_replace(singles$model[test], '(.*)_count', '\\1'))) %>% t
y <- church %>% filter(`_id` %in% x) %>% select(`_id`, starts_with(str_replace(singles$model[test], '(.*)_count', '\\1'))) %>% t
y[13:26,]
y[c(1,13:26),]
cws
cws <- read_tsv('Aug01/about_contextwords.tsv') %>%
rename('_id' = 'X1')
cws
cws <- read_tsv('church/Aug01/about_contextwords.tsv') %>%
rename('_id' = 'X1')
cws
cws %>% filter(`_id` == 'church/N/br-f44/1122') %>% select(c.nvj.10_10.ppmi_cws)
dir()
dir('church/Aug28/')
x <- read_tsv('church/Aug28/about_contextwords.tsv')
x
x %>% rename(`_id` = `X1`)
x %>% rename(`_id` = `X1`) %>% rename_at(vars(ends_with('_cws')), list(~str_replace(., '(.*)_cws', '_cws.\\1')))
x %>% rename(`_id` = `X1`) %>% rename_at(vars(ends_with('_cws')), list(~str_replace(., '(.*)_cws', '_cws.\\1'))) %>% write_tsv('church/Aug28/about_contextwords.tsv')
library(MASS)
library(vegan)
library(tidyverse)
## Working directory should be the dir with isoMDS solutions
setwd("church/Aug28/")
models <- read_tsv("church.models.tsv")
models
cloud <- read_tsv("church.tsv")
subcloud <- cloud %>% dplyr::select(`_id`, ends_with('.x'), ends_with('.y'))
files.names <- models$`_model`
newmat <- files.names
n <- length(files.names)
newmat <- expand.grid(files.names, files.names)
newmat <- as.matrix(newmat)
## Reads list of tokens that are in the intersection of all models
subcloud <- subcloud %>% mutate(n = (rowSums(subcloud != 0)-1)/2) %>%
filter(n == max(n))
sub <- dplyr::select(subcloud, -`_id`, -n) %>% data.frame()
rnset <- subcloud$`_id`
row.names(sub) <- rnset
#rnset <- read.table("tokenIDs.txt", header=F)
rnset <- as.matrix(rnset)
res <- c()
## Procrustes analysis
for (i in 1:nrow(newmat)) {
tryCatch({
mat1 <- sub[c(paste0(newmat[i, 1], '.x'), paste0(newmat[i, 1], '.y'))]
mat2 <- sub[c(paste0(newmat[i, 2], '.x'), paste0(newmat[i, 2], '.y'))]
res[i] <- procrustes(mat1, mat2, symmetric = T)$ss
# res[i] <- procrustes(read.table(newmat[i,1], header=T, row.names=1, sep="\t")[rnset, ], read.table(newmat[i,2], header=T, row.names=1, sep="\t")[rnset, ], symmetric=T)$ss
}, error = function(e) {
res[i] <- NA
print(paste0(newmat[i,1], " ", newmat[i,2]))
})
}
## Convert to similarity matrix
res <- matrix(res, nrow=n)
# convertednames <- gsub("(*)\\.ttmx\\.k2\\.points\\.txt", "\\1", files.names)
rownames(res) <- files.names
colnames(res) <- files.names
## Apply repeatedisoMDS
wwmx <- res
if (wwmx[1,1] > 0) { wwmx <- max(wwmx) - wwmx }
wwmx[wwmx <= 0] <- 0.0000001
for (i in 1:dim(wwmx)[1]) {
wwmx[i, i] <- 0
}
dst <- as.dist(wwmx)
#     dst.isoMDS2 <- isoMDS(dst, y=initMDS(dst), k=k, ...)
#     if (dst.isoMDS2$stress < dst.isoMDS$stress) {
#       dst.isoMDS <- dst.isoMDS2
#     }
#   }
#   return(dst.isoMDS)
# }
#
# k <- 2
# dst.isoMDS <- repeatedIsoMDS(dst, k=k)
dst.MDS <- metaMDS(dst, k = 2, trymax = 30)
stress <- dst.MDS$stress
#     dst.isoMDS2 <- isoMDS(dst, y=initMDS(dst), k=k, ...)
#     if (dst.isoMDS2$stress < dst.isoMDS$stress) {
#       dst.isoMDS <- dst.isoMDS2
#     }
#   }
#   return(dst.isoMDS)
# }
#
# k <- 2
# dst.isoMDS <- repeatedIsoMDS(dst, k=k)
dst.MDS <- metaMDS(dst, k = 2, trymax = 30)
# add coords to models' file
models.w.coords <- dst.MDS$points %>% as.data.frame %>% rownames_to_column %>% as_tibble %>%
setNames(., c('_model', 'model.x', 'model.y')) %>%
left_join(models, by = '_model')
library(ggplot2)
ggplot(models.w.coords) +
geom_point(aes(x = model.x, y = model.y, color = factor(socc_window)))
nrow(cloud)
nrow(subcloud)
subcloud <- cloud %>% dplyr::select(`_id`, ends_with('.x'), ends_with('.y'))
nrow(subcloud)
subcloud
subcloud %>% mutate(n=(rowSums(subcloud != 0)))
subcloud %>% mutate(n=(rowSums(subcloud != 0))) %>% select(`_id`, n)
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% select(`_id`, n)
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% pull(n)
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% count(n)
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94)
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% pull(`_id`)
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t()
x <- subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t()
x[x==0]
x <- subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[1:10,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[1:10,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[11:20,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[12:30,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[14:30,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[12:30,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[20:30,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[30:40,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[40:50,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[50:60,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[60:70,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[70:80,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[80:90,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[160:170,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[90:100,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[100:110,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[110:120,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% filter(n == 94) %>% t() %>% .[120:130,]
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% count(n)
subcloud %>% select(-ends_with('3.x'), -ends_with('3.y')) %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% count(n)
subcloud <- subcloud %>% select(-ends_with('3.x'), -ends_with('3.y'))
subcloud %>% mutate(n=(rowSums(subcloud != 0)-1)/2) %>% count(n)
subcloud <- cloud %>% dplyr::select(`_id`, ends_with('2.x'), ends_with('2.y'))
files.names <- models$`_model`
files.names
files.names[endsWith(files.names, '.2')]
files.names <- models$`_model`[endsWith(models$`_model`, '.2')]
files.names
newmat <- files.names
n <- length(files.names)
newmat <- expand.grid(files.names, files.names)
newmat <- as.matrix(newmat)
## Reads list of tokens that are in the intersection of all models
subcloud <- subcloud %>% mutate(n = (rowSums(subcloud != 0)-1)/2) %>%
filter(n == max(n))
nrow(subcloud)
sub <- dplyr::select(subcloud, -`_id`, -n) %>% data.frame()
rnset <- subcloud$`_id`
row.names(sub) <- rnset
#rnset <- read.table("tokenIDs.txt", header=F)
rnset <- as.matrix(rnset)
res <- c()
## Procrustes analysis
for (i in 1:nrow(newmat)) {
tryCatch({
mat1 <- sub[c(paste0(newmat[i, 1], '.x'), paste0(newmat[i, 1], '.y'))]
mat2 <- sub[c(paste0(newmat[i, 2], '.x'), paste0(newmat[i, 2], '.y'))]
res[i] <- procrustes(mat1, mat2, symmetric = T)$ss
# res[i] <- procrustes(read.table(newmat[i,1], header=T, row.names=1, sep="\t")[rnset, ], read.table(newmat[i,2], header=T, row.names=1, sep="\t")[rnset, ], symmetric=T)$ss
}, error = function(e) {
res[i] <- NA
print(paste0(newmat[i,1], " ", newmat[i,2]))
})
}
## Convert to similarity matrix
res <- matrix(res, nrow=n)
# convertednames <- gsub("(*)\\.ttmx\\.k2\\.points\\.txt", "\\1", files.names)
rownames(res) <- files.names
colnames(res) <- files.names
## Apply repeatedisoMDS
wwmx <- res
if (wwmx[1,1] > 0) { wwmx <- max(wwmx) - wwmx }
wwmx[wwmx <= 0] <- 0.0000001
for (i in 1:dim(wwmx)[1]) {
wwmx[i, i] <- 0
}
dst <- as.dist(wwmx)
#     dst.isoMDS2 <- isoMDS(dst, y=initMDS(dst), k=k, ...)
#     if (dst.isoMDS2$stress < dst.isoMDS$stress) {
#       dst.isoMDS <- dst.isoMDS2
#     }
#   }
#   return(dst.isoMDS)
# }
#
# k <- 2
# dst.isoMDS <- repeatedIsoMDS(dst, k=k)
dst.MDS <- metaMDS(dst, k = 2, trymax = 30)
#     dst.isoMDS2 <- isoMDS(dst, y=initMDS(dst), k=k, ...)
#     if (dst.isoMDS2$stress < dst.isoMDS$stress) {
#       dst.isoMDS <- dst.isoMDS2
#     }
#   }
#   return(dst.isoMDS)
# }
#
# k <- 2
# dst.isoMDS <- repeatedIsoMDS(dst, k=k)
dst.MDS <- metaMDS(dst, k = 2, trymax = 30)
stress <- dst.MDS$stress
# add coords to models' file
models.w.coords <- dst.MDS$points %>% as.data.frame %>% rownames_to_column %>% as_tibble %>%
setNames(., c('_model', 'model.x', 'model.y')) %>%
left_join(models, by = '_model')
ggplot(models.w.coords) +
geom_point(aes(x = model.x, y = model.y, color = factor(socc_window)))
nrow(models.w.coords)
colnames(models)
ggplot(models.w.coords) +
geom_point(aes(x = model.x, y = model.y, color = factor(weighting)))
